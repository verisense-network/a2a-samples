{
    "name": "Butler Agent",
    "description": "An intelligent orchestrator that coordinates multiple specialized AI agents to complete complex tasks",
    "version": "2.0.0",
    "url": "http://localhost:10000",
    "capabilities": {
        "streaming": true,
        "pushNotifications": true,
        "agentOrchestration": true,
        "multiAgentCoordination": true,
        "contextPassing": true,
        "taskPlanning": true,
        "stateTransitionHistory": true
    },
    "defaultInputModes": [
        "text",
        "text/plain",
        "application/json"
    ],
    "defaultOutputModes": [
        "text",
        "text/plain",
        "text/markdown",
        "application/json"
    ],
    "skills": [
        {
            "id": "task_orchestration",
            "name": "Task Orchestration",
            "description": "Breaks down complex tasks and orchestrates multiple agents to complete them",
            "tags": [
                "orchestration",
                "coordination",
                "multi-agent",
                "task-planning",
                "workflow"
            ],
            "examples": [
                "Create a complete web application with frontend and backend",
                "Analyze this codebase and provide optimization recommendations",
                "Help me design and implement a new feature with proper testing"
            ]
        },
        {
            "id": "agent_discovery",
            "name": "Agent Discovery & Selection",
            "description": "Discovers available agents and selects the most appropriate ones for each task",
            "tags": [
                "discovery",
                "agent-selection",
                "capability-matching",
                "resource-allocation"
            ],
            "examples": [
                "What agents are available for data analysis?",
                "Find the best agent for code review",
                "Show me all available marketing agents"
            ]
        },
        {
            "id": "context_management",
            "name": "Context Management",
            "description": "Manages and passes context between agents to maintain coherent workflows",
            "tags": [
                "context",
                "state-management",
                "information-flow",
                "coordination"
            ],
            "examples": [
                "Use the analysis from the data agent to inform the visualization agent",
                "Pass the requirements from the product manager to the developer",
                "Maintain context across multiple agent interactions"
            ]
        },
        {
            "id": "result_synthesis",
            "name": "Result Synthesis",
            "description": "Combines and synthesizes results from multiple agents into coherent responses",
            "tags": [
                "synthesis",
                "integration",
                "summarization",
                "reporting"
            ],
            "examples": [
                "Combine insights from multiple analysts into a report",
                "Merge code contributions from different developer agents",
                "Create a unified summary from various agent outputs"
            ]
        },
        {
            "id": "workflow_automation",
            "name": "Workflow Automation",
            "description": "Automates complex multi-step workflows using agent coordination",
            "tags": [
                "automation",
                "workflow",
                "process",
                "efficiency"
            ],
            "examples": [
                "Automate the complete software development lifecycle",
                "Set up an automated content creation pipeline",
                "Create a data processing workflow with multiple stages"
            ]
        },
        {
            "id": "error_handling",
            "name": "Error Handling & Recovery",
            "description": "Handles errors gracefully and implements fallback strategies",
            "tags": [
                "error-handling",
                "recovery",
                "resilience",
                "fallback"
            ],
            "examples": [
                "Retry failed agent calls with different parameters",
                "Find alternative agents when one fails",
                "Gracefully handle partial task completion"
            ]
        }
    ],
    "metadata": {
        "author": "Verisense Network",
        "category": "Orchestration",
        "tags": [
            "butler",
            "orchestrator",
            "multi-agent",
            "coordinator",
            "workflow-automation"
        ],
        "supportedProtocols": ["A2A"],
        "maxConcurrentAgents": 10,
        "timeoutSeconds": 300
    },
    "supportsAuthenticatedExtendedCard": true
}